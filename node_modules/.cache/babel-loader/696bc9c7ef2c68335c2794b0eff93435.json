{"ast":null,"code":"var _jsxFileName = \"/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/contexts/UserContext.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [users, setUsers] = useState();\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  const updateCurrentUser = i => {\n    setCurrentUser(i);\n  };\n\n  const updateUsers = newUser => {\n    const updatedList = [...users, newUser];\n    setUsers(updatedList);\n  };\n\n  async function loadUsers() {\n    const response = await axios.get(\"http://localhost:5000/users/\");\n\n    if (response.status !== 200) {\n      console.log(\"Error reloading\");\n    }\n\n    setUsers(response.data);\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  const addUserToDB = async newUsr => {\n    await axios.post('http://localhost:5000/users/add', newUsr).then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(\"error while adding: \" + err);\n    });\n  };\n\n  const getUserByName = username => {\n    let currentUser = users.find(user => user.username === username);\n    return currentUser;\n  };\n\n  const deleteUser = async user => {\n    if (user !== undefined) {\n      await axios.delete(`http://localhost:5000/users/${user._id}`).then(res => console.log(res.data)).catch(err => console.log(\"error while deleting: \" + err));\n      setUsers(users.filter(el => el._id !== user._id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      users,\n      currentUser,\n      setCurrentUser,\n      updateUsers,\n      addUserToDB\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/contexts/UserContext.js"],"names":["React","createContext","useEffect","useState","axios","UserContext","UserContextProvider","props","users","setUsers","currentUser","setCurrentUser","undefined","updateCurrentUser","i","updateUsers","newUser","updatedList","loadUsers","response","get","status","console","log","data","addUserToDB","newUsr","post","then","res","catch","err","getUserByName","username","find","user","deleteUser","delete","_id","filter","el","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAGC,KAAK,IAAI;AAEjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACS,SAAD,CAA9C;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7BH,IAAAA,cAAc,CAACG,CAAD,CAAd;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIC,OAAD,IAAa;AAC7B,UAAMC,WAAW,GAAG,CAAC,GAAGT,KAAJ,EAAWQ,OAAX,CAApB;AACAP,IAAAA,QAAQ,CAACQ,WAAD,CAAR;AACH,GAHD;;AAKA,iBAAeC,SAAf,GAA2B;AACvB,UAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,8BAAV,CAAvB;;AACA,QAAGD,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;AACDd,IAAAA,QAAQ,CAACU,QAAQ,CAACK,IAAV,CAAR;AACH;;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,SAAS;AACZ,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMO,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAClC,UAAMtB,KAAK,CAACuB,IAAN,CAAW,iCAAX,EAA8CD,MAA9C,EACLE,IADK,CACAC,GAAG,IAAI;AACTP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACL,IAAhB;AACH,KAHK,EAILM,KAJK,CAICC,GAAG,IAAI;AACVT,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBQ,GAAnC;AACH,KANK,CAAN;AAOH,GARD;;AAUA,QAAMC,aAAa,GAAIC,QAAD,IAAc;AAC5B,QAAIvB,WAAW,GAAGF,KAAK,CAAC0B,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACF,QAAL,KAAkBA,QAAvC,CAAlB;AACA,WAAOvB,WAAP;AACP,GAHD;;AAKA,QAAM0B,UAAU,GAAG,MAAOD,IAAP,IAAgB;AAC/B,QAAGA,IAAI,KAAKvB,SAAZ,EAAsB;AAClB,YAAMR,KAAK,CAACiC,MAAN,CAAc,+BAA8BF,IAAI,CAACG,GAAI,EAArD,EACLV,IADK,CACAC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACL,IAAhB,CADP,EAELM,KAFK,CAECC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAY,2BAA0BQ,GAAtC,CAFR,CAAN;AAGAtB,MAAAA,QAAQ,CAACD,KAAK,CAAC+B,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACF,GAAH,KAAWH,IAAI,CAACG,GAAnC,CAAD,CAAR;AACH;AACJ,GAPD;;AASA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAC9B,MAAAA,KAAD;AAAOE,MAAAA,WAAP;AAAmBC,MAAAA,cAAnB;AAAmCI,MAAAA,WAAnC;AAAgDU,MAAAA;AAAhD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,KAAK,CAACkC,QADX,CADJ;AAKH,CAvDD;;AAyDA,eAAenC,mBAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n\n    const [users, setUsers] = useState();\n    const [currentUser, setCurrentUser] = useState(undefined);\n\n    const updateCurrentUser = (i) => {\n        setCurrentUser(i);\n    }\n\n    const updateUsers = (newUser) => {\n        const updatedList = [...users, newUser];\n        setUsers(updatedList);\n    }\n\n    async function loadUsers() {\n        const response = await axios.get(\"http://localhost:5000/users/\");\n        if(response.status !== 200){\n            console.log(\"Error reloading\");\n        }\n        setUsers(response.data);\n    }\n\n    useEffect(() => {\n        loadUsers();\n    },[]);\n\n    const addUserToDB = async (newUsr) => {\n        await axios.post('http://localhost:5000/users/add', newUsr)\n        .then(res => {\n            console.log(res.data)\n        })\n        .catch(err => {\n            console.log(\"error while adding: \"+err);\n        });\n    }\n\n    const getUserByName = (username) => {\n            let currentUser = users.find((user) => user.username === username);\n            return currentUser;\n    }\n\n    const deleteUser = async (user) => {\n        if(user !== undefined){\n            await axios.delete(`http://localhost:5000/users/${user._id}`)\n            .then(res => console.log(res.data))\n            .catch(err => console.log(\"error while deleting: \"+ err));\n            setUsers(users.filter(el => el._id !== user._id));\n        }\n    }\n    \n    return(\n        <UserContext.Provider value={{users,currentUser,setCurrentUser, updateUsers, addUserToDB}}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserContextProvider;"]},"metadata":{},"sourceType":"module"}