{"ast":null,"code":"var _jsxFileName = \"/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/components/MainContentArea.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Chat from \"./Chat/Chat\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { UserContext } from \"../contexts/UserContext\";\nimport { CookieManager } from \"../cookies/CookieManager\";\nimport { Config } from \"../config/Config\";\nimport io from \"socket.io-client\";\nconst socket = io('http://localhost:5000/', {\n  secure: true,\n  transports: [\"polling\"]\n});\n\nconst MainContentArea = () => {\n  const {\n    config\n  } = useContext(Config);\n  const {\n    users,\n    updateUsers,\n    addUserToDB\n  } = useContext(UserContext);\n  const {\n    setUserCreatedCookie,\n    getCookieByKey,\n    deleteCookieByKey\n  } = useContext(CookieManager);\n  const [newUserName, setNewUserName] = useState(\"\");\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [newUserRegistered, setNewUserRegistered] = useState(undefined);\n  const [isShowPopup, setIsShowPopup] = useState(true);\n  const [usernameIsTooShort, setUsernameIsTooShort] = useState(false);\n  useEffect(() => {\n    socket.on(\"new-user-joined\", data => {\n      console.log(\"Got changes: \", data);\n      setNewUserRegistered(data);\n      console.log(newUserName); // if(data.username !== currentUser.username){\n      //     updateUsers(data);\n      // }\n    });\n  }, []);\n  useEffect(() => {\n    // console.log(\"mount\");\n    // if(getCookieByKey(config.cookieUserKey) !== undefined){\n    //     // console.log(\"current User name:\",getCookieByKey(config.cookieUserKey));\n    //     // save cookie on reload or leaving the page for about 1h\n    //     // when user comes back in time load user from cookie again and delete cookie\n    //     // when user doesn't come back in time, delete cookie and user.\n    // }else if(!isShowPopup){\n    //     // setUserCreatedCookie(currUsr);\n    // }\n    console.log(\"update DB\"); // addUserToDB(currentUser);\n  }, [newUserRegistered]);\n  window.addEventListener(\"beforeunload\", () => {\n    if (currentUser !== undefined) {// deleteCookieByKey(currentUser.username);\n    }\n  });\n\n  const handleUserNameInputChange = e => {\n    setNewUserName(e.target.value);\n  };\n\n  const onUserNameSubmit = e => {\n    e.preventDefault();\n\n    if (newUserName.length < 3) {\n      setUsernameIsTooShort(true);\n    } else {\n      let newUsr = {\n        customId: uuidv4(),\n        username: newUserName\n      };\n      updateUsers(newUsr);\n      setCurrentUser(newUsr);\n      socket.emit(\"new-user-created\", newUsr);\n      setIsShowPopup(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, isShowPopup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Overlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PopupDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"The User you're about to create will only exist as long as you stay on this page. If you leave, or reload the page your user will be deleted.\"), /*#__PURE__*/React.createElement(FormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StyledInput, {\n    type: \"text\",\n    value: newUserName,\n    onChange: handleUserNameInputChange,\n    placeholder: \"Pick a Username...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }), newUserName !== \"\" && /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: onUserNameSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Create User.\")), usernameIsTooShort && /*#__PURE__*/React.createElement(Warning, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"The Username has to have at least 3 characters.\"))), /*#__PURE__*/React.createElement(Chat, {\n    user: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default MainContentArea;\nconst Overlay = styled.div`\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 2;\n`;\nconst Popup = styled.div`\n// display: flex;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 20px;\n    background: var(--dark-grey);\n    border-radius: 10px;\n    float: left;\n    box-sizing: border-box;\n    border: 2px var(--dark-grey);\n    transition: all 0.2s;\n    z-index: 3;\n`;\nconst PopupDescription = styled.div`\n    font-size: 13px;\n    text-align: center;\n    color: var(--black);\n    padding-bottom: 20px;\n    font-weight: bold;\n`;\nconst StyledButton = styled.button`\n    display: flex;\n    text-decoration: none;\n    justify-content: center;\n    padding: 10px 20px;\n    background: var(--light-grey);\n    color: var(--dark-grey);\n    font-weight: 600;\n    font-size: 1rem;\n    border: 0;\n    border-radius: 6px;\n    // margin-top: 10px;\n    // margin-right: 10px;\n    cursor: pointer;\n\n    &:focus {\n        outline: none;\n    }\n`;\nconst FormWrapper = styled.form`\n    display: flex;\n`;\nconst StyledInput = styled.input`\n    border: 0;\n    border-radius: 6px;\n    display: block;\n    width: 100%;\n    padding: 20px;\n    // font-size: 15px;\n    font-size: 1rem;\n    margin-right: 4px;\n    color: var(--black);\n    background: var(--light-grey);\n`;\nconst StyledArea = styled.div`\n    display: grid;\n    // grid-template-columns: 1fr 1fr;\n    padding: 20px;\n    background: var(--app-background);\n    overflow: auto;\n    height: 100vh;\n`;\nconst Warning = styled.div`\n    font-size: 13px;\n    color: var(--warning);\n    text-align: center;\n    font-weight: bold;\n    padding-top: 20px;\n`;","map":{"version":3,"sources":["/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/components/MainContentArea.js"],"names":["React","useContext","useEffect","useState","styled","Chat","v4","uuidv4","UserContext","CookieManager","Config","io","socket","secure","transports","MainContentArea","config","users","updateUsers","addUserToDB","setUserCreatedCookie","getCookieByKey","deleteCookieByKey","newUserName","setNewUserName","currentUser","setCurrentUser","undefined","newUserRegistered","setNewUserRegistered","isShowPopup","setIsShowPopup","usernameIsTooShort","setUsernameIsTooShort","on","data","console","log","window","addEventListener","handleUserNameInputChange","e","target","value","onUserNameSubmit","preventDefault","length","newUsr","customId","username","emit","Overlay","div","Popup","PopupDescription","StyledButton","button","FormWrapper","form","StyledInput","input","StyledArea","Warning"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Chat from \"./Chat/Chat\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { UserContext } from \"../contexts/UserContext\";\nimport { CookieManager } from \"../cookies/CookieManager\";\nimport { Config } from \"../config/Config\";\n\nimport io from \"socket.io-client\";\nconst socket = io('http://localhost:5000/', {secure:true, transports: [\"polling\" ]});\n\n\nconst MainContentArea = () => {\n    const { config } = useContext(Config);\n    const { users, updateUsers, addUserToDB } = useContext(UserContext);\n    const { setUserCreatedCookie, getCookieByKey, deleteCookieByKey } = useContext(CookieManager);\n    const [newUserName, setNewUserName] = useState(\"\");\n    const [currentUser, setCurrentUser] = useState(undefined);\n    const [newUserRegistered, setNewUserRegistered] = useState(undefined);\n    const [isShowPopup, setIsShowPopup] = useState(true);\n    const [usernameIsTooShort, setUsernameIsTooShort] = useState(false);\n    \n    useEffect(() => {\n        socket.on(\"new-user-joined\", data => {\n            console.log(\"Got changes: \", data);\n            setNewUserRegistered(data);\n            console.log(newUserName);\n\n            // if(data.username !== currentUser.username){\n            //     updateUsers(data);\n            // }\n        })\n    }, []);\n\n    useEffect(() => {\n        // console.log(\"mount\");\n        // if(getCookieByKey(config.cookieUserKey) !== undefined){\n        //     // console.log(\"current User name:\",getCookieByKey(config.cookieUserKey));\n        //     // save cookie on reload or leaving the page for about 1h\n        //     // when user comes back in time load user from cookie again and delete cookie\n        //     // when user doesn't come back in time, delete cookie and user.\n\n        // }else if(!isShowPopup){\n        //     // setUserCreatedCookie(currUsr);\n\n        // }\n        console.log(\"update DB\");\n        // addUserToDB(currentUser);\n    },[newUserRegistered]);\n\n    window.addEventListener(\"beforeunload\", () => {\n        if(currentUser !== undefined){\n            // deleteCookieByKey(currentUser.username);\n        }\n    });\n\n    const handleUserNameInputChange = (e) => {\n        setNewUserName(e.target.value);\n    }\n    \n    const onUserNameSubmit = (e) => {\n        e.preventDefault();\n        if(newUserName.length < 3){\n            setUsernameIsTooShort(true);\n        }else{\n            let newUsr = {\n                customId:uuidv4(),\n                username:newUserName,\n            }\n            updateUsers(newUsr);\n            setCurrentUser(newUsr);\n            socket.emit(\"new-user-created\", newUsr);\n            setIsShowPopup(false);\n        }\n    }\n\n    return (\n        <StyledArea>\n            {isShowPopup && \n            <>\n                <Overlay/>\n                <Popup>\n                        <PopupDescription>\n                            The User you're about to create will only exist as long as you stay on this page.\n                            If you leave, or reload the page your user will be deleted.\n                        </PopupDescription>\n                    <FormWrapper>\n                        <StyledInput\n                            type=\"text\"\n                            value={newUserName}\n                            onChange={handleUserNameInputChange}\n                            placeholder=\"Pick a Username...\"\n                        />\n\n                        {newUserName !== \"\" && \n                        <StyledButton \n                            onClick={onUserNameSubmit}\n                        >\n                            Create User.\n                        </StyledButton>}\n                    </FormWrapper>\n                    {usernameIsTooShort && \n                        <Warning>The Username has to have at least 3 characters.</Warning>\n                    }\n                </Popup>\n            </>\n            }\n            <Chat user = {currentUser}/>\n        </StyledArea>\n    );\n}\n\nexport default MainContentArea;\n\nconst Overlay = styled.div`\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 2;\n`;\n\nconst Popup = styled.div`\n// display: flex;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 20px;\n    background: var(--dark-grey);\n    border-radius: 10px;\n    float: left;\n    box-sizing: border-box;\n    border: 2px var(--dark-grey);\n    transition: all 0.2s;\n    z-index: 3;\n`;\n\nconst PopupDescription = styled.div`\n    font-size: 13px;\n    text-align: center;\n    color: var(--black);\n    padding-bottom: 20px;\n    font-weight: bold;\n`;\n\nconst StyledButton = styled.button`\n    display: flex;\n    text-decoration: none;\n    justify-content: center;\n    padding: 10px 20px;\n    background: var(--light-grey);\n    color: var(--dark-grey);\n    font-weight: 600;\n    font-size: 1rem;\n    border: 0;\n    border-radius: 6px;\n    // margin-top: 10px;\n    // margin-right: 10px;\n    cursor: pointer;\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst FormWrapper = styled.form`\n    display: flex;\n`;\n\nconst StyledInput = styled.input`\n    border: 0;\n    border-radius: 6px;\n    display: block;\n    width: 100%;\n    padding: 20px;\n    // font-size: 15px;\n    font-size: 1rem;\n    margin-right: 4px;\n    color: var(--black);\n    background: var(--light-grey);\n`;\n\nconst StyledArea = styled.div`\n    display: grid;\n    // grid-template-columns: 1fr 1fr;\n    padding: 20px;\n    background: var(--app-background);\n    overflow: auto;\n    height: 100vh;\n`;\n\nconst Warning = styled.div`\n    font-size: 13px;\n    color: var(--warning);\n    text-align: center;\n    font-weight: bold;\n    padding-top: 20px;\n`;"]},"metadata":{},"sourceType":"module"}