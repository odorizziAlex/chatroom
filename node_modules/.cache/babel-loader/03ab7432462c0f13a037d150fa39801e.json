{"ast":null,"code":"var _jsxFileName = \"/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/contexts/UserContext.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  useEffect(() => {\n    async function loadUsers() {\n      const response = await axios.get(\"http://localhost:5000/users/\");\n\n      if (response.status !== 200) {// Error\n      }\n\n      setUsers(response.data);\n    }\n\n    loadUsers();\n  }, []);\n  const [users, setUsers] = useState([{\n    customId: 0,\n    name: \"No one is online...\",\n    convIds: []\n  }, {\n    customId: 1,\n    name: \"User A\",\n    convIds: [1, 2]\n  }, {\n    customId: 2,\n    name: \"User B\",\n    convIds: [1]\n  }, {\n    customId: 3,\n    name: \"User C\",\n    convIds: [1]\n  }]);\n\n  const addUserToDB = async newUsr => {\n    await axios.post('http://localhost:5000/users/add', newUsr).then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(\"error: \" + err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      users,\n      addUserToDB\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/contexts/UserContext.js"],"names":["React","createContext","useEffect","useState","axios","UserContext","UserContextProvider","props","loadUsers","response","get","status","setUsers","data","users","customId","name","convIds","addUserToDB","newUsr","post","then","res","console","log","catch","err","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAGC,KAAK,IAAI;AAEjCL,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeM,SAAf,GAA2B;AACvB,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,8BAAV,CAAvB;;AACA,UAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B,CAC3B;AACD;;AACDC,MAAAA,QAAQ,CAACH,QAAQ,CAACI,IAAV,CAAR;AACH;;AACDL,IAAAA,SAAS;AACZ,GATQ,EASP,EATO,CAAT;AAWA,QAAM,CAACM,KAAD,EAAQF,QAAR,IAAoBT,QAAQ,CAAC,CAC/B;AACIY,IAAAA,QAAQ,EAAE,CADd;AAEIC,IAAAA,IAAI,EAAE,qBAFV;AAGIC,IAAAA,OAAO,EAAE;AAHb,GAD+B,EAM/B;AACIF,IAAAA,QAAQ,EAAE,CADd;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAG,CAAH;AAHb,GAN+B,EAW/B;AACIF,IAAAA,QAAQ,EAAE,CADd;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,OAAO,EAAE,CAAC,CAAD;AAHb,GAX+B,EAgB/B;AACIF,IAAAA,QAAQ,EAAE,CADd;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,OAAO,EAAE,CAAC,CAAD;AAHb,GAhB+B,CAAD,CAAlC;;AAuBA,QAAMC,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAClC,UAAMf,KAAK,CAACgB,IAAN,CAAW,iCAAX,EAA8CD,MAA9C,EACLE,IADK,CACAC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACT,IAAhB;AACH,KAHK,EAILY,KAJK,CAICC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAUE,GAAtB;AACH,KANK,CAAN;AAOH,GARD;;AAWA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACZ,MAAAA,KAAD;AAAQI,MAAAA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,KAAK,CAACoB,QADX,CADJ;AAKH,CApDD;;AAsDA,eAAerB,mBAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n\n    useEffect(() => {\n        async function loadUsers() {\n            const response = await axios.get(\"http://localhost:5000/users/\");\n            if (response.status !== 200) {\n              // Error\n            }\n            setUsers(response.data);\n        }\n        loadUsers();\n    },[])\n\n    const [users, setUsers] = useState([\n        {\n            customId: 0,\n            name: \"No one is online...\",\n            convIds: []\n        },\n        {\n            customId: 1,\n            name: \"User A\",\n            convIds: [1,2]\n        },\n        {\n            customId: 2,\n            name: \"User B\",\n            convIds: [1]\n        },\n        {\n            customId: 3,\n            name: \"User C\",\n            convIds: [1]\n        }\n    ]);\n\n    const addUserToDB = async (newUsr) => {\n        await axios.post('http://localhost:5000/users/add', newUsr)\n        .then(res => {\n            console.log(res.data)\n        })\n        .catch(err => {\n            console.log(\"error: \"+err);\n        });\n    }\n\n    \n    return(\n        <UserContext.Provider value={{users, addUserToDB}}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserContextProvider;"]},"metadata":{},"sourceType":"module"}