{"ast":null,"code":"var _jsxFileName = \"/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/contexts/UserContext.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [users, setUsers] = useState();\n  const [loggedInUser, setLoggedInUser] = useState();\n\n  const updateUsers = newUser => {\n    const updatedList = [...users, newUser];\n    setUsers(updatedList);\n  };\n\n  async function loadUsers() {\n    const response = await axios.get(\"http://localhost:5000/users/\");\n\n    if (response.status !== 200) {\n      console.log(\"Error reloading\");\n    }\n\n    setUsers(response.data);\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  const addUserToDB = async newUsr => {\n    await axios.post('http://localhost:5000/users/add', newUsr).then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(\"error while adding: \" + err);\n    });\n  };\n\n  const getUserByName = username => {\n    let currentUser = users.find(user => user.username === username);\n    return currentUser;\n  };\n\n  const deleteUser = async user => {\n    if (user !== undefined) {\n      await axios.delete(`http://localhost:5000/users/${user._id}`).then(res => console.log(res.data)).catch(err => console.log(\"error while deleting: \" + err));\n      setUsers(users.filter(el => el._id !== user._id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      users,\n      updateUsers,\n      loggedInUser,\n      setLoggedInUser,\n      addUserToDB\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/contexts/UserContext.js"],"names":["React","createContext","useEffect","useState","axios","UserContext","UserContextProvider","props","users","setUsers","loggedInUser","setLoggedInUser","updateUsers","newUser","updatedList","loadUsers","response","get","status","console","log","data","addUserToDB","newUsr","post","then","res","catch","err","getUserByName","username","currentUser","find","user","deleteUser","undefined","delete","_id","filter","el","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAGC,KAAK,IAAI;AAEjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;;AAEA,QAAMS,WAAW,GAAIC,OAAD,IAAa;AAC7B,UAAMC,WAAW,GAAG,CAAC,GAAGN,KAAJ,EAAWK,OAAX,CAApB;AACAJ,IAAAA,QAAQ,CAACK,WAAD,CAAR;AACH,GAHD;;AAKA,iBAAeC,SAAf,GAA2B;AACvB,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,8BAAV,CAAvB;;AACA,QAAGD,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;AACDX,IAAAA,QAAQ,CAACO,QAAQ,CAACK,IAAV,CAAR;AACH;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,SAAS;AACZ,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMO,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAClC,UAAMnB,KAAK,CAACoB,IAAN,CAAW,iCAAX,EAA8CD,MAA9C,EACLE,IADK,CACAC,GAAG,IAAI;AACTP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACL,IAAhB;AACH,KAHK,EAILM,KAJK,CAICC,GAAG,IAAI;AACVT,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBQ,GAAnC;AACH,KANK,CAAN;AAOH,GARD;;AAUA,QAAMC,aAAa,GAAIC,QAAD,IAAc;AAC5B,QAAIC,WAAW,GAAGvB,KAAK,CAACwB,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACH,QAAL,KAAkBA,QAAvC,CAAlB;AACA,WAAOC,WAAP;AACP,GAHD;;AAKA,QAAMG,UAAU,GAAG,MAAOD,IAAP,IAAgB;AAC/B,QAAGA,IAAI,KAAKE,SAAZ,EAAsB;AAClB,YAAM/B,KAAK,CAACgC,MAAN,CAAc,+BAA8BH,IAAI,CAACI,GAAI,EAArD,EACLZ,IADK,CACAC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACL,IAAhB,CADP,EAELM,KAFK,CAECC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAY,2BAA0BQ,GAAtC,CAFR,CAAN;AAGAnB,MAAAA,QAAQ,CAACD,KAAK,CAAC8B,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACF,GAAH,KAAWJ,IAAI,CAACI,GAAnC,CAAD,CAAR;AACH;AACJ,GAPD;;AASA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAC7B,MAAAA,KAAD;AAAQI,MAAAA,WAAR;AAAqBF,MAAAA,YAArB;AAAmCC,MAAAA,eAAnC;AAAoDW,MAAAA;AAApD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,KAAK,CAACiC,QADX,CADJ;AAKH,CAnDD;;AAqDA,eAAelC,mBAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n\n    const [users, setUsers] = useState();\n    const [loggedInUser, setLoggedInUser] = useState();\n\n    const updateUsers = (newUser) => {\n        const updatedList = [...users, newUser];\n        setUsers(updatedList);\n    }\n\n    async function loadUsers() {\n        const response = await axios.get(\"http://localhost:5000/users/\");\n        if(response.status !== 200){\n            console.log(\"Error reloading\");\n        }\n        setUsers(response.data);\n    }\n\n    useEffect(() => {\n        loadUsers();\n    },[]);\n\n    const addUserToDB = async (newUsr) => {\n        await axios.post('http://localhost:5000/users/add', newUsr)\n        .then(res => {\n            console.log(res.data)\n        })\n        .catch(err => {\n            console.log(\"error while adding: \"+err);\n        });\n    }\n\n    const getUserByName = (username) => {\n            let currentUser = users.find((user) => user.username === username);\n            return currentUser;\n    }\n\n    const deleteUser = async (user) => {\n        if(user !== undefined){\n            await axios.delete(`http://localhost:5000/users/${user._id}`)\n            .then(res => console.log(res.data))\n            .catch(err => console.log(\"error while deleting: \"+ err));\n            setUsers(users.filter(el => el._id !== user._id));\n        }\n    }\n    \n    return(\n        <UserContext.Provider value={{users, updateUsers, loggedInUser, setLoggedInUser, addUserToDB}}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserContextProvider;"]},"metadata":{},"sourceType":"module"}