{"ast":null,"code":"var _jsxFileName = \"/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/components/MainContentArea.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Chat from \"./Chat/Chat\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { UserContext } from \"../contexts/UserContext\";\n\nconst MainContentArea = () => {\n  const loggedInUserId = 0;\n  const {\n    users,\n    addUserToDB,\n    getUserByName,\n    deleteUser\n  } = useContext(UserContext);\n  const [newUserName, setNewUserName] = useState(\"\");\n  const [allUsers, setAllUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [isShowPopup, setIsShowPopup] = useState(true);\n  const [usernameIsTooShort, setUsernameIsTooShort] = useState(false);\n  useEffect(() => {\n    if (!isShowPopup) {\n      setCurrentUser(getUserByName(newUserName));\n    }\n  }, [users]);\n  window.addEventListener(\"beforeunload\", () => deleteUser(currentUser._id));\n\n  const handleUserNameInputChange = e => {\n    setNewUserName(e.target.value);\n  };\n\n  const onUserNameSubmit = e => {\n    e.preventDefault();\n\n    if (newUserName.length < 3) {\n      setUsernameIsTooShort(true);\n    } else {\n      let newUsr = {\n        customId: uuidv4(),\n        username: newUserName\n      };\n      addUserToDB(newUsr);\n      setIsShowPopup(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, isShowPopup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Overlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StyledInput, {\n    type: \"text\",\n    value: newUserName,\n    onChange: handleUserNameInputChange,\n    placeholder: \"Pick a Username...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }), newUserName !== \"\" && /*#__PURE__*/React.createElement(StyledButton //onsubmit ???\n  , {\n    onClick: onUserNameSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Create. User.\")), usernameIsTooShort && /*#__PURE__*/React.createElement(Warning, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"The Username has to have at least 3 characters.\"))), /*#__PURE__*/React.createElement(Chat, {\n    user: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default MainContentArea;\nconst Overlay = styled.div`\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 2;\n`;\nconst Popup = styled.div`\n// display: flex;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 20px;\n    background: var(--dark-grey);\n    border-radius: 10px;\n    float: left;\n    box-sizing: border-box;\n    border: 2px var(--dark-grey);\n    transition: all 0.2s;\n    z-index: 3;\n`;\nconst StyledButton = styled.button`\n    display: flex;\n    text-decoration: none;\n    justify-content: center;\n    padding: 10px 20px;\n    background: var(--light-grey);\n    color: var(--dark-grey);\n    font-weight: 600;\n    font-size: 1rem;\n    border: 0;\n    border-radius: 6px;\n    // margin-top: 10px;\n    // margin-right: 10px;\n    cursor: pointer;\n\n    &:focus {\n        outline: none;\n    }\n`;\nconst FormWrapper = styled.form`\n    display: flex;\n`;\nconst StyledInput = styled.input`\n    border: 0;\n    border-radius: 6px;\n    display: block;\n    width: 100%;\n    padding: 20px;\n    // font-size: 15px;\n    font-size: 1rem;\n    margin-right: 4px;\n    color: var(--black);\n    background: var(--light-grey);\n`;\nconst StyledArea = styled.div`\n    display: grid;\n    // grid-template-columns: 1fr 1fr;\n    padding: 20px;\n    background: var(--app-background);\n    overflow: auto;\n    height: 100vh;\n`;\nconst Warning = styled.div`\n    font-size: 13px;\n    color: var(--warning);\n    font-weight: bold;\n    padding-top: 20px;\n`;","map":{"version":3,"sources":["/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/components/MainContentArea.js"],"names":["React","useContext","useEffect","useState","styled","Chat","v4","uuidv4","UserContext","MainContentArea","loggedInUserId","users","addUserToDB","getUserByName","deleteUser","newUserName","setNewUserName","allUsers","setAllUsers","currentUser","setCurrentUser","undefined","isShowPopup","setIsShowPopup","usernameIsTooShort","setUsernameIsTooShort","window","addEventListener","_id","handleUserNameInputChange","e","target","value","onUserNameSubmit","preventDefault","length","newUsr","customId","username","Overlay","div","Popup","StyledButton","button","FormWrapper","form","StyledInput","input","StyledArea","Warning"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Chat from \"./Chat/Chat\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { UserContext } from \"../contexts/UserContext\";\n\n\nconst MainContentArea = () => {\n    const loggedInUserId = 0;\n    const {users, addUserToDB, getUserByName, deleteUser} = useContext(UserContext);\n    const [newUserName, setNewUserName] = useState(\"\");\n    const [allUsers, setAllUsers] = useState([]);\n    const [currentUser, setCurrentUser] = useState(undefined);\n    const [isShowPopup, setIsShowPopup] = useState(true);\n    const [usernameIsTooShort, setUsernameIsTooShort] = useState(false);\n    \n    useEffect(() => {\n        if(!isShowPopup){\n            setCurrentUser(getUserByName(newUserName));\n        }\n    },[users]);\n\n    window.addEventListener(\"beforeunload\", () => deleteUser(currentUser._id));\n\n\n    const handleUserNameInputChange = (e) => {\n        setNewUserName(e.target.value);\n    }\n    \n    const onUserNameSubmit = (e) => {\n        e.preventDefault();\n        if(newUserName.length < 3){\n            setUsernameIsTooShort(true);\n        }else{\n            let newUsr = {\n                customId:uuidv4(),\n                username:newUserName,\n            }\n            addUserToDB(newUsr);\n            setIsShowPopup(false);\n        }\n    }\n\n    return (\n        <StyledArea>\n            {isShowPopup && \n            <>\n                <Overlay/>\n                <Popup>\n                    <FormWrapper>\n                        <StyledInput\n                            type=\"text\"\n                            value={newUserName}\n                            onChange={handleUserNameInputChange}\n                            placeholder=\"Pick a Username...\"\n                        />\n\n                        {newUserName !== \"\" && \n                        <StyledButton \n                        //onsubmit ???\n                            onClick={onUserNameSubmit}\n                        >\n                            Create. User.\n                        </StyledButton>}\n                    </FormWrapper>\n                    {usernameIsTooShort && \n                        <Warning>The Username has to have at least 3 characters.</Warning>\n                    }\n                </Popup>\n            </>\n            }\n            <Chat user = {currentUser}/>\n        </StyledArea>\n    );\n}\n\nexport default MainContentArea;\n\nconst Overlay = styled.div`\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 2;\n`;\n\nconst Popup = styled.div`\n// display: flex;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 20px;\n    background: var(--dark-grey);\n    border-radius: 10px;\n    float: left;\n    box-sizing: border-box;\n    border: 2px var(--dark-grey);\n    transition: all 0.2s;\n    z-index: 3;\n`;\n\nconst StyledButton = styled.button`\n    display: flex;\n    text-decoration: none;\n    justify-content: center;\n    padding: 10px 20px;\n    background: var(--light-grey);\n    color: var(--dark-grey);\n    font-weight: 600;\n    font-size: 1rem;\n    border: 0;\n    border-radius: 6px;\n    // margin-top: 10px;\n    // margin-right: 10px;\n    cursor: pointer;\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst FormWrapper = styled.form`\n    display: flex;\n`;\n\nconst StyledInput = styled.input`\n    border: 0;\n    border-radius: 6px;\n    display: block;\n    width: 100%;\n    padding: 20px;\n    // font-size: 15px;\n    font-size: 1rem;\n    margin-right: 4px;\n    color: var(--black);\n    background: var(--light-grey);\n`;\n\nconst StyledArea = styled.div`\n    display: grid;\n    // grid-template-columns: 1fr 1fr;\n    padding: 20px;\n    background: var(--app-background);\n    overflow: auto;\n    height: 100vh;\n`;\n\nconst Warning = styled.div`\n    font-size: 13px;\n    color: var(--warning);\n    font-weight: bold;\n    padding-top: 20px;\n`;"]},"metadata":{},"sourceType":"module"}