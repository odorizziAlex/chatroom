{"ast":null,"code":"var _jsxFileName = \"/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/contexts/UserContext.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [users, setUsers] = useState(); // const [users, setUsers] = useState([\n  //     {\n  //         customId: 0,\n  //         name: \"No one is online...\",\n  //         convIds: []\n  //     },\n  //     {\n  //         customId: 1,\n  //         name: \"User A\",\n  //         convIds: [1,2]\n  //     },\n  //     {\n  //         customId: 2,\n  //         name: \"User B\",\n  //         convIds: [1]\n  //     },\n  //     {\n  //         customId: 3,\n  //         name: \"User C\",\n  //         convIds: [1]\n  //     }\n  // ]);\n\n  useEffect(() => {\n    console.log(\"loading Users\");\n\n    async function loadUsers() {\n      const response = await axios.get(\"http://localhost:5000/users/\");\n\n      if (response.status !== 200) {\n        console.log(\"Error reloading\");\n      }\n\n      setUsers();\n    }\n\n    loadUsers();\n  }, []);\n\n  const addUserToDB = async newUsr => {\n    await axios.post('http://localhost:5000/users/add', newUsr).then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(\"error: \" + err);\n    });\n  }; // async function loadUsers() {\n  //     const response = await axios.get(\"http://localhost:5000/users/\");\n  //     if (response.status !== 200) {\n  //       // Error\n  //     }\n  //     setUsers(response.data);\n  // }\n\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      users,\n      addUserToDB\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/contexts/UserContext.js"],"names":["React","createContext","useEffect","useState","axios","UserContext","UserContextProvider","props","users","setUsers","console","log","loadUsers","response","get","status","addUserToDB","newUsr","post","then","res","data","catch","err","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAGC,KAAK,IAAI;AAEjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC,CAFiC,CAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,mBAAeC,SAAf,GAA2B;AACvB,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,8BAAV,CAAvB;;AACA,UAAGD,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvBL,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;AACDF,MAAAA,QAAQ;AACX;;AACDG,IAAAA,SAAS;AACZ,GAVQ,EAUP,EAVO,CAAT;;AAYA,QAAMI,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAClC,UAAMb,KAAK,CAACc,IAAN,CAAW,iCAAX,EAA8CD,MAA9C,EACLE,IADK,CACAC,GAAG,IAAI;AACTV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,IAAhB;AACH,KAHK,EAILC,KAJK,CAICC,GAAG,IAAI;AACVb,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAUY,GAAtB;AACH,KANK,CAAN;AAOH,GARD,CAtCiC,CAgDjC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACf,MAAAA,KAAD;AAAQQ,MAAAA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACiB,QADX,CADJ;AAKH,CA7DD;;AA+DA,eAAelB,mBAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n\n    const [users, setUsers] = useState();\n    // const [users, setUsers] = useState([\n    //     {\n    //         customId: 0,\n    //         name: \"No one is online...\",\n    //         convIds: []\n    //     },\n    //     {\n    //         customId: 1,\n    //         name: \"User A\",\n    //         convIds: [1,2]\n    //     },\n    //     {\n    //         customId: 2,\n    //         name: \"User B\",\n    //         convIds: [1]\n    //     },\n    //     {\n    //         customId: 3,\n    //         name: \"User C\",\n    //         convIds: [1]\n    //     }\n    // ]);\n\n    useEffect(() => {\n        console.log(\"loading Users\");\n        async function loadUsers() {\n            const response = await axios.get(\"http://localhost:5000/users/\");\n            if(response.status !== 200){\n                console.log(\"Error reloading\");\n            }\n            setUsers();\n        }\n        loadUsers();\n    },[]);\n\n    const addUserToDB = async (newUsr) => {\n        await axios.post('http://localhost:5000/users/add', newUsr)\n        .then(res => {\n            console.log(res.data)\n        })\n        .catch(err => {\n            console.log(\"error: \"+err);\n        });\n    }\n\n    // async function loadUsers() {\n    //     const response = await axios.get(\"http://localhost:5000/users/\");\n    //     if (response.status !== 200) {\n    //       // Error\n    //     }\n    //     setUsers(response.data);\n    // }\n    \n    return(\n        <UserContext.Provider value={{users, addUserToDB}}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserContextProvider;"]},"metadata":{},"sourceType":"module"}