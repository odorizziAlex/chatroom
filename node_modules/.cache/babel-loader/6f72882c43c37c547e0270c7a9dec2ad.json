{"ast":null,"code":"var _jsxFileName = \"/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/contexts/UserContext.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [users, setUsers] = useState(); // const [users, setUsers] = useState([\n  //     {\n  //         customId: 0,\n  //         name: \"No one is online...\",\n  //         convIds: []\n  //     },\n  //     {\n  //         customId: 1,\n  //         name: \"User A\",\n  //         convIds: [1,2]\n  //     },\n  //     {\n  //         customId: 2,\n  //         name: \"User B\",\n  //         convIds: [1]\n  //     },\n  //     {\n  //         customId: 3,\n  //         name: \"User C\",\n  //         convIds: [1]\n  //     }\n  // ]);\n\n  async function loadUsers() {\n    const response = await axios.get(\"http://localhost:5000/users/\");\n\n    if (response.status !== 200) {\n      console.log(\"Error reloading\");\n    }\n\n    setUsers(response.data);\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  const addUserToDB = async newUsr => {\n    await axios.post('http://localhost:5000/users/add', newUsr).then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(\"error while adding: \" + err);\n    });\n    loadUsers();\n  };\n\n  const getUserByName = username => {\n    if (username !== undefined) {\n      let currentUser = users.find(user => user.username === username);\n      return currentUser;\n    }\n  };\n\n  const deleteUser = async user => {\n    if (user !== undefined) {\n      await axios.delete(`http://localhost:5000/users/${user._id}`).then(res => console.log(res.data)).catch(err => console.log(\"error while deleting: \" + err));\n      setUsers(users.filter(el => el._id !== user._id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      users,\n      addUserToDB,\n      getUserByName,\n      deleteUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/contexts/UserContext.js"],"names":["React","createContext","useEffect","useState","axios","UserContext","UserContextProvider","props","users","setUsers","loadUsers","response","get","status","console","log","data","addUserToDB","newUsr","post","then","res","catch","err","getUserByName","username","undefined","currentUser","find","user","deleteUser","delete","_id","filter","el","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAGC,KAAK,IAAI;AAEjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC,CAFiC,CAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAeO,SAAf,GAA2B;AACvB,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,8BAAV,CAAvB;;AACA,QAAGD,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;AACDN,IAAAA,QAAQ,CAACE,QAAQ,CAACK,IAAV,CAAR;AACH;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS;AACZ,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMO,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAClC,UAAMd,KAAK,CAACe,IAAN,CAAW,iCAAX,EAA8CD,MAA9C,EACLE,IADK,CACAC,GAAG,IAAI;AACTP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACL,IAAhB;AACH,KAHK,EAILM,KAJK,CAICC,GAAG,IAAI;AACVT,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBQ,GAAnC;AACH,KANK,CAAN;AAOAb,IAAAA,SAAS;AACZ,GATD;;AAWA,QAAMc,aAAa,GAAIC,QAAD,IAAc;AAChC,QAAGA,QAAQ,KAAKC,SAAhB,EAA0B;AACtB,UAAIC,WAAW,GAAGnB,KAAK,CAACoB,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACJ,QAAL,KAAkBA,QAAvC,CAAlB;AACA,aAAOE,WAAP;AACH;AAEJ,GAND;;AAQA,QAAMG,UAAU,GAAG,MAAOD,IAAP,IAAgB;AAC/B,QAAGA,IAAI,KAAKH,SAAZ,EAAsB;AAClB,YAAMtB,KAAK,CAAC2B,MAAN,CAAc,+BAA8BF,IAAI,CAACG,GAAI,EAArD,EACLZ,IADK,CACAC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACL,IAAhB,CADP,EAELM,KAFK,CAECC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAY,2BAA0BQ,GAAtC,CAFR,CAAN;AAGAd,MAAAA,QAAQ,CAACD,KAAK,CAACyB,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACF,GAAH,KAAWH,IAAI,CAACG,GAAnC,CAAD,CAAR;AACH;AACJ,GAPD;;AASA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACxB,MAAAA,KAAD;AAAQS,MAAAA,WAAR;AAAqBO,MAAAA,aAArB;AAAoCM,MAAAA;AAApC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,KAAK,CAAC4B,QADX,CADJ;AAKH,CAvED;;AAyEA,eAAe7B,mBAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n\n    const [users, setUsers] = useState();\n    // const [users, setUsers] = useState([\n    //     {\n    //         customId: 0,\n    //         name: \"No one is online...\",\n    //         convIds: []\n    //     },\n    //     {\n    //         customId: 1,\n    //         name: \"User A\",\n    //         convIds: [1,2]\n    //     },\n    //     {\n    //         customId: 2,\n    //         name: \"User B\",\n    //         convIds: [1]\n    //     },\n    //     {\n    //         customId: 3,\n    //         name: \"User C\",\n    //         convIds: [1]\n    //     }\n    // ]);\n\n    async function loadUsers() {\n        const response = await axios.get(\"http://localhost:5000/users/\");\n        if(response.status !== 200){\n            console.log(\"Error reloading\");\n        }\n        setUsers(response.data);\n    }\n\n    useEffect(() => {\n        loadUsers();\n    },[]);\n\n    const addUserToDB = async (newUsr) => {\n        await axios.post('http://localhost:5000/users/add', newUsr)\n        .then(res => {\n            console.log(res.data)\n        })\n        .catch(err => {\n            console.log(\"error while adding: \"+err);\n        });\n        loadUsers();\n    }\n\n    const getUserByName = (username) => {\n        if(username !== undefined){\n            let currentUser = users.find((user) => user.username === username);\n            return currentUser;\n        }\n\n    }\n\n    const deleteUser = async (user) => {\n        if(user !== undefined){\n            await axios.delete(`http://localhost:5000/users/${user._id}`)\n            .then(res => console.log(res.data))\n            .catch(err => console.log(\"error while deleting: \"+ err));\n            setUsers(users.filter(el => el._id !== user._id));\n        }\n    }\n    \n    return(\n        <UserContext.Provider value={{users, addUserToDB, getUserByName, deleteUser}}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserContextProvider;"]},"metadata":{},"sourceType":"module"}