{"ast":null,"code":"var _jsxFileName = \"/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/cookies/CookieManager.js\";\nimport React, { createContext, useState } from \"react\";\nimport Cookies from 'js-cookie';\nexport const CookieManager = createContext();\n\nconst CookieManagerProvider = props => {\n  const [cookies, setCookies] = useState([{}]);\n\n  const setUserCreatedCookie = user => {\n    Cookies.set(user.username, user, {\n      expires: 1\n    });\n    let cookie = Cookies.get(user.username);\n    console.log(cookie);\n  };\n\n  return /*#__PURE__*/React.createElement(CookieManager.Provider, {\n    value: {\n      setUserCreatedCookie\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default CookieManagerProvider;","map":{"version":3,"sources":["/Users/alexodorizzi/Desktop/Projects/ChatRoom/chatroom/src/cookies/CookieManager.js"],"names":["React","createContext","useState","Cookies","CookieManager","CookieManagerProvider","props","cookies","setCookies","setUserCreatedCookie","user","set","username","expires","cookie","get","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,aAAa,GAAGH,aAAa,EAAnC;;AAEP,MAAMI,qBAAqB,GAAGC,KAAK,IAAI;AAEnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CACnC,EADmC,CAAD,CAAtC;;AAMA,QAAMO,oBAAoB,GAAIC,IAAD,IAAU;AACnCP,IAAAA,OAAO,CAACQ,GAAR,CAAYD,IAAI,CAACE,QAAjB,EAA2BF,IAA3B,EAAiC;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAjC;AACA,QAAIC,MAAM,GAAGX,OAAO,CAACY,GAAR,CAAYL,IAAI,CAACE,QAAjB,CAAb;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH,GAJD;;AAMA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEL,MAAAA;AAAF,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACY,QADX,CADJ;AAKH,CAnBD;;AAqBA,eAAeb,qBAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport Cookies from 'js-cookie';\n\nexport const CookieManager = createContext();\n\nconst CookieManagerProvider = props => {\n\n    const [cookies, setCookies] = useState([\n        {\n\n        },\n    ]);\n\n    const setUserCreatedCookie = (user) => {\n        Cookies.set(user.username, user, { expires: 1 });\n        let cookie = Cookies.get(user.username);\n        console.log(cookie);\n    }\n\n    return(\n        <CookieManager.Provider value={{ setUserCreatedCookie }}>\n            {props.children}\n        </CookieManager.Provider>\n    )\n}\n\nexport default CookieManagerProvider;"]},"metadata":{},"sourceType":"module"}